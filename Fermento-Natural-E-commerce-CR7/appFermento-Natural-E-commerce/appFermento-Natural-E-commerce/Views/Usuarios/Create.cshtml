@model appFermento_Natural_E_commerce.Models.Usuario

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Usuario</h4>
<hr />
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="Create" id="registrationForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="nome" class="control-label"></label>
                    <input asp-for="nome" class="form-control" required />
                    <span asp-validation-for="nome" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="email" class="control-label"></label>
                    <input asp-for="email" class="form-control" required />
                    <div id="emailValidation" class="text-danger"></div>
                    <span asp-validation-for="email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="senha" class="control-label"></label>
                    <input asp-for="senha" type="password" class="form-control" required />
                    <div id="senhaValidation" class="text-danger"></div>
                    <span asp-validation-for="senha" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="endereço" class="control-label"></label>
                    <input asp-for="endereço" class="form-control" required />
                    <span asp-validation-for="endereço" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="celular" class="control-label"></label>
                    <input asp-for="celular" class="form-control" required />
                    <span asp-validation-for="celular" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Cadastrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('registrationForm').addEventListener('submit', function (event) {
            var email = document.getElementById('email').value;
            var senha = document.getElementById('senha').value;
            var emailValidation = document.getElementById('emailValidation');
            var senhaValidation = document.getElementById('senhaValidation');
            var isValid = true;

            // Validar o formato do email
            if (!isValidEmail(email)) {
                emailValidation.textContent = 'Por favor, insira um email válido.';
                isValid = false;
            } else {
                emailValidation.textContent = '';
            }

            // Validar a força da senha (pelo menos 8 caracteres e incluir letras e números)
            if (!isValidPassword(senha)) {
                senhaValidation.textContent = 'A senha deve ter pelo menos 8 caracteres e incluir letras e números.';
                isValid = false;
            } else {
                senhaValidation.textContent = '';
            }

            if (!isValid) {
                event.preventDefault(); // Impede o envio do formulário se houver erros de validação
            }
        });

        // Função para validar o formato do email e exibir mensagem
        function isValidEmail(email) {
            var emailRegex = /^[\w+([\.-]?\w+)*\w+([\.-]?\w+)*(\.\w{2,3})+$/;
            return emailRegex.test(email);
        }

        // Função para validar a força da senha
        function isValidPassword(password) {
            // A senha deve ter pelo menos 8 caracteres e incluir letras e números
            var passwordRegex = /^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/;
            return passwordRegex.test(password);
        }
    </script>
}
